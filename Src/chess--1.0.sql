CREATE OR REPLACE FUNCTION san_in(cstring)
  RETURNS SAN
  LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE
  AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION san_out(SAN)
  RETURNS cstring
  LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE
  AS 'MODULE_PATHNAME';

CREATE OR REPLACE FUNCTION fen_in(cstring)
  RETURNS FEN
  AS 'MODULE_PATHNAME'
  LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE OR REPLACE FUNCTION fen_out(FEN)
  RETURNS cstring
  AS 'MODULE_PATHNAME'
  LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE TYPE SAN (
  internallength = 1000,
  input          = san_in,
  output         = san_out
);

CREATE TYPE FEN (
  internallength = 128,
  input = fen_in,
  output = fen_out,
  alignment = double
);

CREATE FUNCTION get_FirstMoves(SAN, integer)
  RETURNS SAN
  AS 'MODULE_PATHNAME', 'get_FirstMoves'
  LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION has_opening(SAN, SAN)
  RETURNS boolean
  AS 'MODULE_PATHNAME', 'has_opening'
  LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION get_board_state(SAN, integer)
  RETURNS FEN
  AS 'MODULE_PATHNAME', 'get_board_state'
  LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION has_Board(SAN, FEN, integer)
  RETURNS boolean
  AS 'MODULE_PATHNAME', 'has_Board'
  LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;